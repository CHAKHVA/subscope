# --- General Application Settings ---
# APP_ENV: Environment type (development, staging, production)
APP_ENV=development
# API_HOST: Host for the FastAPI backend to bind to
API_HOST=0.0.0.0
# API_PORT: Port for the FastAPI backend
API_PORT=8000
# CORS_ORIGINS: Comma-separated list of allowed origins for CORS (e.g., http://localhost:3000,https://yourdomain.com)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
# LOG_LEVEL: Logging level for the application (e.g., DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# --- Database (PostgreSQL) ---
# DATABASE_URL: Full connection string for PostgreSQL
# Example: postgresql://user:password@host:port/dbname
DATABASE_URL=postgresql://subscope_user:subscope_password@localhost:5432/subscope_db
# Alternatively, individual components (if your ORM/driver prefers):
# POSTGRES_USER=subscope_user
# POSTGRES_PASSWORD=subscope_password
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_DB=subscope_db

# --- JWT Authentication (FastAPI Backend) ---
# JWT_SECRET_KEY: A strong, random secret key for signing JWTs (generate one)
JWT_SECRET_KEY=your_super_secret_jwt_key_please_change_me
# JWT_ALGORITHM: Algorithm for JWTs
JWT_ALGORITHM=HS256
# ACCESS_TOKEN_EXPIRE_MINUTES: How long access tokens are valid
ACCESS_TOKEN_EXPIRE_MINUTES=60

# --- Email Delivery (AWS SES - Backend) ---
# AWS_ACCESS_KEY_ID: AWS Access Key ID for SES
AWS_ACCESS_KEY_ID=your_aws_access_key_id
# AWS_SECRET_ACCESS_KEY: AWS Secret Access Key for SES
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
# AWS_REGION: AWS region where SES is configured
AWS_REGION=us-east-1
# SES_EMAIL_SENDER: Verified email address to send emails from
SES_EMAIL_SENDER="Subscope <noreply@yourdomain.com>"
# WELCOME_EMAIL_SUBJECT: Subject for the welcome email
WELCOME_EMAIL_SUBJECT=Welcome to Subscope!
# REMINDER_EMAIL_SUBJECT: Subject for reminder emails (can include placeholders like {subscription_name})
REMINDER_EMAIL_SUBJECT=Upcoming payment for {subscription_name}

# --- Billing & Payments (Stripe - Backend & Frontend) ---
# STRIPE_SECRET_KEY: Stripe Secret Key (for backend use)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key # or sk_live_... for production
# STRIPE_PUBLISHABLE_KEY: Stripe Publishable Key (for frontend use, needs NEXT_PUBLIC_ prefix)
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key # or pk_live_... for production
# STRIPE_WEBHOOK_SECRET: Stripe Webhook Signing Secret (for verifying webhooks from Stripe)
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret
# STRIPE_PRO_PLAN_PRICE_ID: The Price ID of your "Pro Plan" in Stripe
STRIPE_PRO_PLAN_PRICE_ID=price_xxxxxxxxxxxxxx

# --- Monitoring (PostHog - Backend & Frontend) ---
# POSTHOG_API_KEY: PostHog Project API Key
POSTHOG_API_KEY=phc_your_posthog_api_key
# POSTHOG_HOST: PostHog instance URL (e.g., https://app.posthog.com or your self-hosted URL)
POSTHOG_HOST=https://app.posthog.com

# --- Frontend Specific (Next.js) ---
# NEXT_PUBLIC_API_BASE_URL: Base URL for the FastAPI backend, used by the Next.js frontend
NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api/v1
# NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: (Same as STRIPE_PUBLISHABLE_KEY, repeated for Next.js browser access)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
# NEXT_PUBLIC_POSTHOG_API_KEY: (Same as POSTHOG_API_KEY, repeated for Next.js browser access)
NEXT_PUBLIC_POSTHOG_API_KEY=phc_your_posthog_api_key
# NEXT_PUBLIC_POSTHOG_HOST: (Same as POSTHOG_HOST, repeated for Next.js browser access)
NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# --- Optional / Future ---
# SENTRY_DSN: DSN for Sentry error tracking (if you add it)
# SENTRY_DSN=
# REDIS_URL: For caching or advanced background tasks (if you add Redis)
# REDIS_URL=redis://localhost:6379/0
